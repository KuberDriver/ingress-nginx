name: docker-build-httpbin

on:
  pull_request:
    branches:
      - "*"

  push:
    branches:
      - "*"


jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go 1.17
        id: go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      -
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            httpbin:
              - 'images/httpbin/**'
            cfssl:
              - 'images/cfssl/**'            
            echo:
              - 'images/echo/**'            

      - name: Build image for httpbin
        if: steps.filter.outputs.httpbin == 'true'
        env:
          ARCH: amd64
        run: |
          echo "building images..."
          cd images/httpbin; pwd; ls
          PLATFORMS=linux/amd64 make build

      - name: Build image for cfssl
        if: steps.filter.outputs.cfssl == 'true'
        env:
          ARCH: amd64
        run: |
          echo "building images..."
          cd images/cfssl; pwd; ls
          PLATFORMS=linux/amd64 make build          

      - name: Build image for echo
        if: steps.filter.outputs.echo == 'true'
        env:
          ARCH: amd64
        run: |
          echo "building images..."
          cd images/echo; pwd; ls
          PLATFORMS=linux/amd64 make build          